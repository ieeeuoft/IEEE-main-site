@import "./../../../abstracts/variables";
@import "./../../../abstracts/mixins";

// I made a mixin since essentially, all of the boxes have the same CSS but just different colors
// So I just call the mixin and the column it's in, and the array in the next line maps the column
// number to the respective colors
// I included @media so I can control the grid/layout of the design when the screen gets thin

$aboutCols: 1 blue6 blue1, 2 orange3 orange2, 3 green3 green1; 

@mixin about($col) {
    width: 100%;
    height: 100%;
    z-index: 1;

    @each $about in $aboutCols {
        @if ($col == nth($about, 1)) {    
            background-color: color(nth($about, 2));
            grid-column: $col;

            &-heading {
                @include title(nth($about, 3));
                font-size: size(lg);
                @include grid-row-col(2, $col);
                z-index: 2;
                margin: 6rem 5px 3rem;

                @include response(lg) {
                    margin: 5rem 5px 1rem;
                }
                @include response(lg/md) {
                    @if ($col ==  1) {
                        @include grid-row-col(4, 1);
                    }
                    @if ($col ==  3) {
                        @include grid-row-col(4, 2);
                    }
                    @if ($col ==  2) {
                        grid-row: 1; 
                        grid-column: 1/-1;
                    }
                    margin-bottom: 1.5rem;
                    font-size: size(lg)-.5rem;
                }
                @include response(sm) {
                    @if ($col ==  3) {
                        @include grid-row-col(6, 1);
                    }
                }
            }
            &-text {
                font-size: size(xs);
                line-height: 2.5rem;
                text-align: center;
                width: 80%;
                max-width: 800px;
                @include grid-row-col(3, $col);
                align-self: start;
                z-index: 2;

                @include response(lg/md) {
                    width: 90%;
                    @if ($col ==  1) {
                        @include grid-row-col(5, 1);
                    }
                    @if ($col ==  3) {
                        @include grid-row-col(5, 2);
                    }
                    @if ($col ==  2) {
                        grid-row: 2; 
                        grid-column: 1/-1;

                    }
                }
                @include response(sm) {
                    padding-bottom: 5rem;
                    @if ($col ==  3) {
                        @include grid-row-col(7, 1);
                    }
                    @if ($col ==  2) {
                        padding-bottom: 0;
                    }
                }
            }
            @if ($col ==  1 or $col == 3) {
                grid-row: 2/-2;
                &-img {
                    height: 15vw;
                    max-height: 30rem;
                    padding: 1rem 0 2rem;
                    @include grid-row-col(4, $col);
                    z-index: 2;

                    @include response(xl) {
                        height: 20vw;
                    }

                    @include response(lg/md) {
                        height: 30vw;
                        @include grid-row-col(6, $col);
                        @if ($col == 3) {
                            @include grid-row-col(6, 2);
                        }
                    }

                    @include response(sm) {
                        display: none;
                    }
                }

                @include response(lg/md) {
                    grid-row: 4/-1; 
                    @if ($col ==  1) { grid-column: 1}
                    @if ($col ==  3) { grid-column: 2}
                }
                @include response(sm) {
                    @if ($col ==  1) { 
                        grid-row: 4/6; 
                    }

                    @if ($col ==  3) { 
                        grid-row: 6/-1; 
                        grid-column: 1
                    }
                }
            }
            @else {
                grid-row: 1/-1;
                &-heading {
                    font-size: size(xl);

                    @include response(lg/md) {
                        font-size: size(lg)+1rem;
                    }

                }
                // &-text {
                //     font-size: size(sm);
                //     line-height: 2.7rem;
                // }
                &-btn-container {
                    width: 80%;
                    max-width: 500px;
                    grid-row: 4;
                    @include grid-row-col(4, $col);
                    z-index: 2;
                
                    &-button {
                        width: 100%;
                        padding: 15px 40px;
                        border: 2px solid color(orange2);
                        color: color(orange2);
                        background-color: color(orange3);
                        font-family: font(merri);
                        font-weight: bold;
                        font-size: size(md); 
                        text-align: center;
                        padding: 2rem;
                        margin-bottom: 15px;
                        transition: all .5s;
        
                        &:hover {
                            color: color(orange3);
                            border: 2px solid color(orange2);
                            background-color: color(orange2);
                        }

                        @include response(lg) {
                            font-size: size(md) - .3rem; 
                        }
                    }
                    @include response(lg) {
                        margin-top: 2rem;
                    }

                    @include response(lg/md) {
                        grid-row: 3;
                        grid-column: 1/-1;
                    }
                }
                @include response(lg/md) {
                    grid-row: 1/4; 
                    grid-column: 1/-1;
                }
            }
        }
    }    
}


// Here's the actual CSS
.about-containter {
    display: grid;
    grid-template-columns: 30vw 40vw 30vw;
    grid-template-rows: 1px auto auto auto 1px;
    align-items: center;
    justify-items: center;
    margin-top: -4rem;
    z-index: 11;
    grid-row-gap: 2rem;

    @include response(xl) {
        grid-row-gap: 1rem;
    }

    @include response(lg/md) {
        grid-template-rows: repeat(6, auto);
        grid-template-columns: 50vw 50vw;
        grid-row-gap: 0;
    }

    @include response(sm) {
        grid-template-rows: repeat(8, auto);
        grid-template-columns: auto;
    }
   
    // Here I call the mixin and just put the column # it's in
    .computer {
        @include about(1);
    }
    .electronics {
        @include about(3);
    }
    .about {
        @include about(2);
    }

}
